# Шахматный ферзь может ходить на любое число клеток по горизонтали, по вертикали или по диагонали.
# Даны две различные клетки шахматной доски, определите, может ли ферзь попасть с первой клетки на вторую одним ходом.
# Для простоты можно не рассматривать случай, когда данные клетки совпадают.
# Формат входных данных:
# Программа получает на вход четыре числа от 1 до 8 каждое, задающие номер столбца и номер строки сначала
# для первой клетки, потом для второй клетки.
# Формат выходных данных:
# Программа должна вывести YES, если из первой клетки ходом ферзя можно попасть во вторую. В противном случае - NO.
x = input('Введите координату первой точки по оси х: ')
y = input('Введите координату первой точки по оси y: ')
x1 = input('Введите координату второй точки по оси х: ')
y1 = input('Введите координату второй точки по оси y: ')
if int(x + y) // 10 * 10 < int(x1 + y1) < int(x + y) // 10 * 10 + 9: #Выделяем диапазон, в котором находятся точки и смотрим ходит ли по оси Х
    print('YES')
elif int(y + x) // 10 * 10 < int(y1 + x1) < int(y + x) // 10 * 10 + 9: #тоже самое для оси У
    print('YES')
elif int(x + y) % 11 == int(x1 + y1) % 11 and (int(x) + int(y)) % 2 == (int(x1) + int(y1)) % 2: #диагональ слева на право
    print('YES')
elif int(x + y) % 9 == int(x1 + y1) % 9 and int(x) + int(y) == int(x1) + int(y1): #диагональ справа налево
    print('YES')
else:
    print('NO')

#Т.к. в диагоналях есть несовпадения (например, координаты x,y = 1,5 и x,y = 7,8 будут выдавать одинаковый остаток от
# деления на 11 и показывать результат YES, хотя на самом деле должно быть NO), то вводится дополнительная проверка:
#конфликтующие координаты будут всегда давать разный остаток при делении на 2. Также и в случае со второй диагональю:
#конфликтующие координаты будут давать разный результат при сложении между собой.